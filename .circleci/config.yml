version: 2.1

orbs:
  rust: circleci/rust@1.0.0

jobs:
  integration-test:
    parameters:
      module:
        type: string
      test:
        type: string
    working_directory: ~/kiwi
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Start all services declared in docker-compose.yml
          # TODO: Implement a better way to wait for Kafka to be ready
          command: docker-compose up -d && sleep 10
      # Run cargo test in a Docker container
      - run:
          name: Run cargo test
          command: |
            NETWORK_NAME=$(docker network ls --filter name='kiwi' -q)
            docker run --network $NETWORK_NAME --name kiwi-tests -v $(pwd):/project --workdir /project rust:1.73.0 cargo test

      # Dependency caching
      # - restore_cache:
      #     keys:
      #       - cargo-v1-{{ checksum "Cargo.lock" }}

      # - run: cargo build

      # - save_cache:
      #     key: cargo-v1-{{ checksum "Cargo.lock" }}
      #     paths:
      #       - target

      # # Run the test
      # - run: cargo test --test '<< parameters.module >>' -- --nocapture --test-threads=1 --test '<< parameters.test >>'

workflows:
  kafka:
    jobs:
      - integration-test:
          matrix:
            parameters:
              module: ["kafka"]
              test: ["test_kafka_source"]
